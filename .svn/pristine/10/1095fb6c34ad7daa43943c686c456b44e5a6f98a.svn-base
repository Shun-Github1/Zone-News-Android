// Generated by view binder compiler. Do not edit!
package com.anssy.znewspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.anssy.znewspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTopicModifyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addIv;

  @NonNull
  public final LayoutNoDataBinding noDataLayout;

  @NonNull
  public final RelativeLayout topLayout;

  @NonNull
  public final RecyclerView topicRecycler;

  private ActivityTopicModifyBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView addIv,
      @NonNull LayoutNoDataBinding noDataLayout, @NonNull RelativeLayout topLayout,
      @NonNull RecyclerView topicRecycler) {
    this.rootView = rootView;
    this.addIv = addIv;
    this.noDataLayout = noDataLayout;
    this.topLayout = topLayout;
    this.topicRecycler = topicRecycler;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTopicModifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTopicModifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_topic_modify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTopicModifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_iv;
      ImageView addIv = ViewBindings.findChildViewById(rootView, id);
      if (addIv == null) {
        break missingId;
      }

      id = R.id.no_data_layout;
      View noDataLayout = ViewBindings.findChildViewById(rootView, id);
      if (noDataLayout == null) {
        break missingId;
      }
      LayoutNoDataBinding binding_noDataLayout = LayoutNoDataBinding.bind(noDataLayout);

      id = R.id.top_layout;
      RelativeLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      id = R.id.topic_recycler;
      RecyclerView topicRecycler = ViewBindings.findChildViewById(rootView, id);
      if (topicRecycler == null) {
        break missingId;
      }

      return new ActivityTopicModifyBinding((ConstraintLayout) rootView, addIv,
          binding_noDataLayout, topLayout, topicRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
