package com.anssy.znewspro.utils.network;

/**
 * 自定义Observer
 *
 * @author llw
 */
@kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000&\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\u0003\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0002\b\'\u0018\u0000*\u0004\b\u0000\u0010\u00012\b\u0012\u0004\u0012\u0002H\u00010\u0002B\u0005\u00a2\u0006\u0002\u0010\u0003J\b\u0010\u0004\u001a\u00020\u0005H\u0016J\u0010\u0010\u0006\u001a\u00020\u00052\u0006\u0010\u0007\u001a\u00020\bH\u0016J\u0012\u0010\t\u001a\u00020\u00052\b\u0010\u0007\u001a\u0004\u0018\u00010\bH&J\u001a\u0010\n\u001a\u00020\u00052\b\u0010\u000b\u001a\u0004\b\u00028\u0000H\u0016\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\fJ\u0010\u0010\r\u001a\u00020\u00052\u0006\u0010\u000e\u001a\u00020\u000fH\u0016J\u0015\u0010\u0010\u001a\u00020\u00052\u0006\u0010\u000b\u001a\u00028\u0000H&\u00a2\u0006\u0002\u0010\f\u0082\u0002\u0004\n\u0002\b9\u00a8\u0006\u0011"}, d2 = {"Lcom/anssy/znewspro/utils/network/BaseObserver;", "T", "Lio/reactivex/Observer;", "()V", "onComplete", "", "onError", "e", "", "onFailure", "onNext", "t", "(Ljava/lang/Object;)V", "onSubscribe", "disposable", "Lio/reactivex/disposables/Disposable;", "onSuccess", "app_debug"})
public abstract class BaseObserver<T extends java.lang.Object> implements io.reactivex.Observer<T> {
    
    public BaseObserver() {
        super();
    }
    
    @java.lang.Override()
    public void onSubscribe(@org.jetbrains.annotations.NotNull()
    io.reactivex.disposables.Disposable disposable) {
    }
    
    @java.lang.Override()
    public void onNext(@org.jetbrains.annotations.NotNull()
    T t) {
    }
    
    @java.lang.Override()
    public void onError(@org.jetbrains.annotations.NotNull()
    java.lang.Throwable e) {
    }
    
    @java.lang.Override()
    public void onComplete() {
    }
    
    public abstract void onSuccess(T t);
    
    public abstract void onFailure(@org.jetbrains.annotations.Nullable()
    java.lang.Throwable e);
}