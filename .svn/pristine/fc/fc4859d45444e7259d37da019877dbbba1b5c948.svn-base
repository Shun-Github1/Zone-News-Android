package com.anssy.znewspro.ui.login

import android.annotation.SuppressLint
import android.content.Intent
import android.os.Bundle
import android.os.Handler
import android.os.Looper
import android.text.SpannableString
import android.text.Spanned
import android.text.TextUtils
import android.text.style.UnderlineSpan
import android.util.Log
import androidx.activity.viewModels
import com.anssy.videolive.utils.Constants
import com.anssy.znewspro.R
import com.anssy.znewspro.base.BaseActivity
import com.anssy.znewspro.databinding.ActivityLoginEmailBinding
import com.anssy.znewspro.model.LoginModel
import com.anssy.znewspro.ui.MainActivity
import com.anssy.znewspro.utils.SharedPreferenceUtils
import com.anssy.znewspro.utils.ToastUtils
import com.jaeger.library.StatusBarUtil
import com.kongzue.dialogx.dialogs.TipDialog
import com.kongzue.dialogx.dialogs.WaitDialog


/**
 * @Description TODO
 * @Author yulu
 * @CreateTime 2025年07月03日 16:29:13
 */

class LoginEmailActivity : BaseActivity() {
    private lateinit var mViewBindIng: ActivityLoginEmailBinding
    private val loginModel: LoginModel by viewModels()
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        mViewBindIng = ActivityLoginEmailBinding.inflate(layoutInflater)
        setContentView(mViewBindIng.root)
        StatusBarUtil.setLightMode(this)
        StatusBarUtil.setColor(this, getColor(R.color.white), 0)
        initView()
        initModel()
    }

    @SuppressLint("SetTextI18n")
    private fun initView() {
        mViewBindIng.topLayout.titleTv.text = "Sign in with email"
        val spannableString = SpannableString(mViewBindIng.registerTv.text)
        spannableString.run {
            setSpan(UnderlineSpan(), 0, spannableString.length, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)
        }
        mViewBindIng.loginBtn.setOnClickListener {
            if (TextUtils.isEmpty(mViewBindIng.emailEt.text)){
                ToastUtils.showShortToast(mContext!!,"请输入账号")
                return@setOnClickListener
            }
            if (TextUtils.isEmpty(mViewBindIng.passEt.text)){
                ToastUtils.showShortToast(mContext!!,"请输入密码")
                return@setOnClickListener
            }
            WaitDialog.show("正在登录")
            loginModel.loginApp(mViewBindIng.emailEt.text.toString(),mViewBindIng.passEt.text.toString())
        }

        mViewBindIng.registerTv.text = spannableString
        mViewBindIng.registerTv.setOnClickListener {
            val intent = Intent(mContext, RegisterActivity::class.java)
            startActivity(intent)
        }
    }
    private fun  initModel(){
      loginModel.loginEntry.observe(this) {
          if (it.code==Constants.SUCCESS_CODE){
              TipDialog.show("Login Success",WaitDialog.TYPE.SUCCESS)
              SharedPreferenceUtils.saveString(mContext,"token",it.data.access_token)
              SharedPreferenceUtils.saveBoolean(mContext,"isLogin",true)
              Handler(Looper.getMainLooper()).postDelayed({
                  val intent = Intent(mContext,MainActivity::class.java)
                  startActivity(intent)
                  finishAffinity()
              },2000)
          }else{
              WaitDialog.dismiss()
              ToastUtils.showShortToast(mContext!!,it.msg)
          }


      }
    }
}