package com.anssy.znewspro.ui.topicmodify

import android.annotation.SuppressLint
import android.os.Bundle
import android.util.Log
import android.widget.ImageView
import android.widget.TextView
import androidx.activity.viewModels
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.anssy.videolive.utils.Constants
import com.anssy.znewspro.R
import com.anssy.znewspro.base.BaseActivity
import com.anssy.znewspro.databinding.ActivityAllTopicBinding
import com.anssy.znewspro.model.TopicModel
import com.anssy.znewspro.utils.SharedPreferenceUtils
import com.jaeger.library.StatusBarUtil
import com.kongzue.dialogx.dialogs.TipDialog
import com.kongzue.dialogx.dialogs.WaitDialog
import com.zhy.adapter.recyclerview.CommonAdapter
import com.zhy.adapter.recyclerview.base.ViewHolder

/**
 * @Description 所有话题
 * @Author yulu
 * @CreateTime 2025年07月07日 10:47:43
 */

class TopicAllActivity :BaseActivity() {
    private lateinit var mViewBinding:ActivityAllTopicBinding
    private val topicModel: TopicModel by viewModels()
    private var mList = ArrayList<String>()
    private lateinit var mAdapter :CommonAdapter<String>
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        mViewBinding  = ActivityAllTopicBinding.inflate(layoutInflater)
        setContentView(mViewBinding.root)
        StatusBarUtil.setLightMode(this)
        StatusBarUtil.setColor(this,getColor(R.color.white),0)
        initView()
        initModel()
    }


    @SuppressLint("NotifyDataSetChanged")
    private fun initModel(){
        topicModel.queryAllTopics()
        topicModel.topicListEntry.observe(this){
            val tempList : List<String> = SharedPreferenceUtils.getList(mContext,"list")
            val topics = it.data.topics
            val toTypedArray =topics.subtract(tempList.toSet()).toTypedArray()//两个集合的差集
            mList.clear()
            mList.addAll(toTypedArray)
            mAdapter.notifyDataSetChanged()
        }
        topicModel.commonResponseEntry.observe(this){
            if(it!=null){
                if (it.code==Constants.SUCCESS_CODE){
                    setResult(RESULT_OK)
                    TipDialog.show("Add Success",WaitDialog.TYPE.SUCCESS)
                    mList.remove(it.msg)
                    mAdapter.notifyDataSetChanged()
                }else{
                    if (it.code==1000){
                        TipDialog.show("Server Error",WaitDialog.TYPE.ERROR)
                    }else{
                        TipDialog.show(it.msg,WaitDialog.TYPE.ERROR)
                    }
                }
            }else{
                WaitDialog.dismiss()
            }
        }
    }

    private fun addTopic(topic:String){
        WaitDialog.show("正在添加")
        topicModel.editTopic(Constants.TYPE_TOPIC_ADD,topic)
    }

    private fun initView() {
        mViewBinding.topLayout.titleTv.text = "话题列表"
        mViewBinding.topicRv.layoutManager = LinearLayoutManager(this,RecyclerView.VERTICAL,false)
        mAdapter = object : CommonAdapter<String>(this, R.layout.item_topic_recycler,mList){
            override fun convert(holder: ViewHolder, t: String, position: Int) {
                    val topicTv:TextView = holder.getView(R.id.topic_tv)
                    topicTv.text = t
                    val addIv:ImageView = holder.getView(R.id.delete_iv)
                    addIv.apply {
                        setImageResource(R.drawable.icon_popup_close_default)
                        rotation  = 45f
                    }
                    addIv.setOnClickListener {
                        addTopic(t)
                    }
            }

        }
        mViewBinding.topicRv.adapter = mAdapter

    }
}